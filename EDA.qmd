---
title: "EDA"
format: html
editor: visual
---

```{r}
#| label: setup
library(tidyverse)
library(flextable)
```

## Exploratory Data Analysis (EDA)

```{r}
my_heights <- modelr::heights
```

```{r}
summary(my_heights)
```

```{r}
# NAs in my_heights?
my_heights %>% 
  apply(MARGIN = 2, FUN = is.na) %>% 
  apply(MARGIN = 2, FUN = sum) 
```

```{r}
# number of NAs in each variable
# drop variables with no NA
my_heights %>% 
  is.na() %>% 
  colSums() %>%
  .[. > 0]
```

```{r}
my_heights %>% 
  select(-marital) %>% 
  vtable::st(group = 'sex')
```

```{r}
# package vtable 
# must be installed
my_heights %>% 
  select(
    -marital, 
    -sex
    ) %>% 
  # . to stop RStudio 
  # complaining about 
  # no data
  vtable::st(data = ., out = "return") |> 
  as_flextable()
```

```{r}
# package vtable must 
# be installed
my_heights %>% 
  select(marital, sex) %>% 
  vtable::st(
    data = ., 
    out = "return"
    ) |> 
  as_flextable()
```

```{r}
# next line gives dataframe/tibble
# as flextable
use_df_printer()
my_heights %>% 
  select(marital, sex) %>% 
  vtable::st(out = "return") 
```

```{r}
#| eval: false
#| ft_max_row: 15
# Default for ft_max_row is 10
# so just first 10 lines will
# be printed
use_df_printer()
my_heights %>% 
  select(-marital) %>% 
  vtable::st(
    group = 'sex',
    group.long = TRUE,
    out = "return"
    )
```

```{r}
#| eval: false
#| ft_max_row: 15
# Default for ft_max_row is 10
# so just first 10 lines will
# be printed
use_df_printer()
my_heights %>% 
  mutate(
    married = if_else(
      marital == 'married', 
      TRUE, 
      FALSE
      )
    ) %>% 
  filter(sex == 'female') %>% 
  select(-sex, -marital) %>% 
  vtable::st(
    group = "married",
    group.long = TRUE,
    out = "return"
    )
```

```{r}
ggplot(data = my_heights) +
  geom_bar(
    mapping = aes(
      x = education
      ), 
    na.rm = TRUE
    ) +
   theme(
     axis.text = element_text(
       size = 15
       ),
    axis.title = element_text(
       size = 15
       )
   )
```

```{r}
my_heights %>% 
  mutate(
    edu_fac = cut(education, 
                  breaks = c(0, 12, 14, 16, 21), 
                  labels = c("NotHS", "NotTC", "NotC", "C+"),
                  right = FALSE) 
  ) %>% 
  filter(!is.na(edu_fac) & income > 0) %>%
  ggplot(mapping = aes(x = income, fill = edu_fac, colour = edu_fac)) +
  geom_density(alpha = 0.2, na.rm = TRUE) + 
  facet_wrap(~sex)
```
